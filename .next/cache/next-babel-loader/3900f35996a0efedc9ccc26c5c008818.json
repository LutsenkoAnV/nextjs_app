{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\projects_ma\\\\TT\\\\react_posts_app\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from './components/MyLayout';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport styled from 'styled-components';\nvar H1 = styled.h1.withConfig({\n  displayName: \"pages__H1\",\n  componentId: \"w5lbo-0\"\n})([\"margin-left:50px;\"]);\nvar StyledLi = styled.li.withConfig({\n  displayName: \"pages__StyledLi\",\n  componentId: \"w5lbo-1\"\n})([\"position:relative;list-style:none;text-align:center;height:100px;max-width:950px;padding-top:30px;margin:0 auto 15px;border:1px solid lightgrey;& .destroy-post{display:none;position:absolute;margin:0;padding:0;border:0;background:none;top:10px;right:20px;width:30px;font-size:40px;font-family:arial;color:#cc9a9a;outline:none;transition:color 0.2s ease-out;cursor:pointer;&:after{content:\\\"\\xD7\\\";}}&:hover .destroy-post{display:block;}& .destroy-post:hover{color:#af5b5e;}& .post__title{font-family:\\\"Lucida Sans Unicode\\\",\\\"Lucida Grande\\\",sans-serif;text-decoration:none;font-size:15px;color:black;&:hover{color:grey;}}\"]);\nvar StyledLink = styled.a.withConfig({\n  displayName: \"pages__StyledLink\",\n  componentId: \"w5lbo-2\"\n})([\"display:inline-block;position:absolute;text-decoration:none;font-family:\\\"Lucida Sans Unicode\\\",\\\"Lucida Grande\\\",sans-serif;font-size:25px;font-weight:700;margin-top:10px;padding:8px;right:20px;border:1px solid black;border-radius:5px;cursor:pointer;transition:0.3s;&:hover{color:white;background-color:black;}\"]);\n\nvar loadPosts = function loadPosts() {\n  var response, data;\n  return _regeneratorRuntime.async(function loadPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts\"));\n\n        case 2:\n          response = _context.sent;\n          data = response.data;\n          return _context.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Index = function Index(props) {\n  var _useState = useState(props.shows),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var deletePost = function deletePost(event) {\n    var id, show;\n    return _regeneratorRuntime.async(function deletePost$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = event.currentTarget.dataset.id;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios[\"delete\"](\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(loadPosts());\n\n          case 5:\n            show = _context2.sent;\n            setPosts(_toConsumableArray(show.reverse()));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/posts/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(StyledLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Add new post\")), __jsx(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, posts.map(function (show) {\n    return __jsx(StyledLi, {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"destroy-post\",\n      \"aria-label\": \"Delete\",\n      \"data-id\": show.id,\n      onClick: deletePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"post__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, show.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var show;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(loadPosts());\n\n        case 2:\n          show = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            shows: _toConsumableArray(show).reverse()\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/projects_ma/TT/react_posts_app/pages/index.tsx"],"names":["useState","Layout","Link","axios","styled","H1","h1","StyledLi","li","StyledLink","a","loadPosts","get","response","data","Index","props","shows","posts","setPosts","deletePost","event","id","currentTarget","dataset","show","reverse","map","title","getInitialProps"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Layout from './components/MyLayout';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { NextPage } from 'next';\n\nconst H1 = styled.h1`\n  margin-left: 50px;\n`;\n\nconst StyledLi = styled.li`\n  position: relative;\n  list-style: none;\n  text-align: center;\n  height: 100px;\n  max-width: 950px;\n  padding-top: 30px;\n  margin: 0 auto 15px;\n  border: 1px solid lightgrey;\n\n  & .destroy-post {\n    display: none;\n    position: absolute;\n    margin: 0;\n    padding: 0;\n    border: 0;  \n    background: none;\n    top: 10px;\n    right: 20px;\n    width: 30px;\n    font-size: 40px;\n    font-family: arial;\n    color: #cc9a9a;\n    outline: none;\n    transition: color 0.2s ease-out;\n    cursor: pointer;\n\n    &:after {\n      content: \"Ã—\";\n    }\n  }\n\n  &:hover .destroy-post {\n    display: block;\n  }\n\n  & .destroy-post:hover {\n    color: #af5b5e;\n  }\n\n  & .post__title {\n    font-family: \"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif;\n    text-decoration: none;\n    font-size: 15px;\n    color: black;\n\n    &:hover {\n      color: grey;\n    }\n  }\n`;\n\nconst StyledLink = styled.a`\n  display: inline-block;\n  position: absolute;\n  text-decoration: none;\n  font-family: \"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif;\n  font-size: 25px;\n  font-weight: 700;\n  margin-top: 10px;\n  padding: 8px;\n  right: 20px;\n  border: 1px solid black;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n`;\n\nconst loadPosts = async () => {\n  const response = await axios.get(`https://simple-blog-api.crew.red/posts`);\n  const data = response.data;\n\n  return data;\n};\n\ninterface Props {\n  shows: Post[];\n}\n\nconst Index: NextPage<Props> = props => {\n  const [posts, setPosts] = useState<Post[]>(props.shows);\n\n  const deletePost = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { id } = event.currentTarget.dataset;\n    await axios.delete(`https://simple-blog-api.crew.red/posts/${id}`);\n    \n    const show = await loadPosts();\n    setPosts([...show.reverse()]);\n  }\n\n  return (\n    <Layout>\n      <Link href=\"/posts/new\">\n        <StyledLink>Add new post</StyledLink>\n      </Link>\n      <H1>Posts</H1>\n      <ul>\n        {posts.map(show => (\n          <StyledLi key={show.id}>\n            <button\n              type=\"button\"\n              className=\"destroy-post\"\n              aria-label=\"Delete\"\n              data-id={show.id}\n              onClick={deletePost}\n            />\n            <Link href=\"/posts/[id]\" as={`/posts/${show.id}`}>\n              <a className=\"post__title\">{show.title}</a>\n            </Link>\n          </StyledLi>\n        ))}\n      </ul>\n    </Layout>\n  )\n};\n\nIndex.getInitialProps = async function() {\n  const show = await loadPosts();\n\n  return {\n    shows: [...show].reverse(),\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}