{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\projects_ma\\\\TT\\\\react_posts_app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from './components/MyLayout';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, show.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data, r, d;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.data);\n\n        case 5:\n          data = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(axios.get('https://simple-blog-api.crew.red/posts'));\n\n        case 8:\n          r = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(r.data);\n\n        case 11:\n          d = _context.sent;\n          console.log(data);\n          console.log(d.map(function (entry) {\n            return entry.show;\n          }));\n          return _context.abrupt(\"return\", {\n            shows: _toConsumableArray(d)\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/projects_ma/TT/react_posts_app/pages/index.js"],"names":["Layout","Link","axios","fetch","Index","props","shows","map","show","id","title","getInitialProps","get","res","data","r","d","console","log","entry"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADiB;AAAA,CAAnB;;AAeAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJT,KAAK,CAACU,GAAN,CAAU,8CAAV,CADI;;AAAA;AAChBC,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAFD;;AAAA;AAEhBA,UAAAA,IAFgB;AAAA;AAAA,2CAINZ,KAAK,CAACU,GAAN,CAAU,wCAAV,CAJM;;AAAA;AAIhBG,UAAAA,CAJgB;AAAA;AAAA,2CAKNA,CAAC,CAACD,IALI;;AAAA;AAKhBE,UAAAA,CALgB;AAOtBC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACT,GAAF,CAAM,UAAAY,KAAK;AAAA,mBAAIA,KAAK,CAACX,IAAV;AAAA,WAAX,CAAZ;AARsB,2CAUf;AACLF,YAAAA,KAAK,qBAAMU,CAAN;AADA,WAVe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAeA,eAAeZ,KAAf","sourcesContent":["import Layout from './components/MyLayout';\nimport Link from 'next/link';\nimport axios from 'axios'\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.title}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = await axios.get('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.data;\n\n  const r = await axios.get('https://simple-blog-api.crew.red/posts');\n  const d = await r.data;\n\n  console.log(data);\n  console.log(d.map(entry => entry.show));\n\n  return {\n    shows: [...d],\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}